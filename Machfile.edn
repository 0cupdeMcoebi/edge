{mach/m2 [[aero "1.1.2"]
          [roll "0.0.5-SNAPSHOT"]]

 mach/props [config (aero.core/read-config "config.edn" {})
             version #$ ["git" "describe" "--dirty" "--long" "--tags" "--match" "[0-9]*"]
             s3-artefact (str "edge-" version "-standalone.jar")
             uberjar "target/edge-app.jar"]

 mach/import [["https://raw.githubusercontent.com/juxt/mach/master/extensions/aws.mach.edn"
               {aws-profile (:aws-profile config)}]
              ;; ["https://raw.githubusercontent.com/juxt/mach/master/extensions/terraform.mach.edn"
              ;;  {aws-profile (:aws-profile config)
              ;;   bucket (:terraform-state-s3-bucket config)}]
              ]

 info (println "S3 Release Artefact:" s3-artefact)
 roll-info (println "Latest S3 Release Artefact:" (:latest-release-artefact (roll.core/preprocess config)))

 ;; Resolving VPC ID
 ;; Unexpected end of JSON input
 ;; This fails

 uberjar {product uberjar
          novelty (not (mach.core/file-exists? uberjar))
          produce  #$ ["boot uberjar"]}

 upload {depends [uberjar]
         update! (roll.core/upload! config uberjar s3-artefact version)}

 tfjson {product "deployment.tf.json"
         novelty (mach.core/modified-since product ["Machfile.edn" "roll.edn"])
         produce (-> config
                     (roll.core/preprocess)

                     ;; Roll needs a launch command for each ASG
                     (update-in [:asgs]
                                (fn [asgs]
                                  (for [{:keys [release-artifact] :as m} asgs]
                                    (assoc m :launch-command (str "java -jar " release-artifact)))))

                     (roll.core/deployment->tf)

                     ;; Add more bespoke Terraform configuration here if you want to:
                     (roll.core/->tf-json))}}
